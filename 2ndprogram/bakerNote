Hi Everyone,
In order to access each character in a string,
in NASM, you have to load the address of the
string into a register (like maybe use edi).
Then you can point to each character using [edi]
and then increment edi after you are through 
processing the character. (this is using
register indirect addressing)
Example:

     mov edi, myString  ;  loads address of myString into register edi (addresses are 32bits)
     mov ecx, [myStringLen];  loads number of chars in myString (stored from the input) into ecx
 
     test ecx, ecx  ; check if ecx is 0 if so no chars to look at 
                ;;; same as cmp ecx, 0 but a bit more efficient
     je done_with_string
 
top_loop:  
     mov al, [edi]  ;  get the character pointed at by edi into al
     cmp al, 'a'     ;  
     jb  not_lower_case  ; if its smaller its not lower case
     cmp al, 'z'
     ja  not_lower_case   if its bigger its not lower case
     sub al, 32       ;  convert the char in al to uppercase
     mov  [edi], al     ;; move the converted char in al back out to string
not_lower_case:
     inc edi   ;  add 1 to edi so it points to next char in the string
     loop top_loop    ;  decrements ecx if not zero jmps to top_loop


     ;;;;;; rest of code 

Dr. Baker
